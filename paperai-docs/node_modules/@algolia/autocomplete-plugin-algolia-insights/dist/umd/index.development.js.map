{"version":3,"file":"index.development.js","sources":["../../../autocomplete-shared/dist/esm/createRef.js","../../../autocomplete-shared/dist/esm/debounce.js","../../../autocomplete-shared/dist/esm/isEqual.js","../../../autocomplete-shared/dist/esm/noop.js","../../../autocomplete-shared/dist/esm/safelyRunOnBrowser.js","../../src/createClickedEvent.ts","../../src/isModernInsightsClient.ts","../../src/createSearchInsightsApi.ts","../../src/createViewedEvents.ts","../../src/isAlgoliaInsightsHit.ts","../../src/createAlgoliaInsightsPlugin.ts"],"sourcesContent":["export function createRef(initialValue) {\n  return {\n    current: initialValue\n  };\n}","export function debounce(fn, time) {\n  var timerId = undefined;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(function () {\n      return fn.apply(void 0, args);\n    }, time);\n  };\n}","function isPrimitive(obj) {\n  return obj !== Object(obj);\n}\nexport function isEqual(first, second) {\n  if (first === second) {\n    return true;\n  }\n  if (isPrimitive(first) || isPrimitive(second) || typeof first === 'function' || typeof second === 'function') {\n    return first === second;\n  }\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n  for (var _i = 0, _Object$keys = Object.keys(first); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (!(key in second)) {\n      return false;\n    }\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n  return true;\n}","export var noop = function noop() {};","/**\n * Safely runs code meant for browser environments only.\n */\nexport function safelyRunOnBrowser(callback) {\n  if (typeof window !== 'undefined') {\n    return callback({\n      window: window\n    });\n  }\n  return undefined;\n}","import type {\n  AlgoliaInsightsHit,\n  ClickedObjectIDsAfterSearchParams,\n  InsightsParamsWithItems,\n} from './types';\n\ntype CreateClickedEventParams = {\n  item: AlgoliaInsightsHit;\n  items: AlgoliaInsightsHit[];\n};\n\nexport function createClickedEvent({\n  item,\n  items,\n}: CreateClickedEventParams): Omit<\n  InsightsParamsWithItems<ClickedObjectIDsAfterSearchParams>,\n  'eventName'\n> & { algoliaSource?: string[] } {\n  return {\n    index: item.__autocomplete_indexName,\n    items: [item],\n    positions: [1 + items.findIndex((x) => x.objectID === item.objectID)],\n    queryID: item.__autocomplete_queryID,\n    algoliaSource: ['autocomplete'],\n  };\n}\n","import type { InsightsClient } from './types';\n\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nexport function isModernInsightsClient(client: InsightsClient): boolean {\n  const [major, minor] = (client.version || '').split('.').map(Number);\n\n  /* eslint-disable @typescript-eslint/camelcase */\n  const v3 = major >= 3;\n  const v2_4 = major === 2 && minor >= 4;\n  const v1_10 = major === 1 && minor >= 10;\n\n  return v3 || v2_4 || v1_10;\n  /* eslint-enable @typescript-eslint/camelcase */\n}\n","import type { InsightsMethodMap } from 'search-insights';\n\nimport { isModernInsightsClient } from './isModernInsightsClient';\nimport {\n  AlgoliaInsightsHit,\n  ClickedFiltersParams,\n  ClickedObjectIDsAfterSearchParams,\n  ClickedObjectIDsParams,\n  ConvertedFiltersParams,\n  ConvertedObjectIDsAfterSearchParams,\n  ConvertedObjectIDsParams,\n  InsightsClient,\n  InsightsClientMethod,\n  InsightsParamsWithItems,\n  ViewedFiltersParams,\n  ViewedObjectIDsParams,\n} from './types';\n\nfunction chunk<TItem extends { objectIDs: string[] }>(\n  item: TItem,\n  chunkSize: number = 20\n): TItem[] {\n  const chunks: TItem[] = [];\n  for (let i = 0; i < item.objectIDs.length; i += chunkSize) {\n    chunks.push({\n      ...item,\n      objectIDs: item.objectIDs.slice(i, i + chunkSize),\n    });\n  }\n  return chunks;\n}\n\nfunction mapToInsightsParamsApi<\n  TInsightsParamsType extends {\n    items: AlgoliaInsightsHit[];\n    objectIDs?: string[];\n  }\n>(params: TInsightsParamsType[]) {\n  return params.map(({ items, ...param }) => ({\n    ...param,\n    objectIDs: items?.map(({ objectID }) => objectID) || param.objectIDs,\n  }));\n}\n\nexport function createSearchInsightsApi(searchInsights: InsightsClient) {\n  const canSendHeaders = isModernInsightsClient(searchInsights);\n\n  function sendToInsights<TInsightsMethod extends InsightsClientMethod>(\n    method: InsightsClientMethod,\n    payloads: InsightsMethodMap[TInsightsMethod],\n    items?: AlgoliaInsightsHit[]\n  ) {\n    if (canSendHeaders && typeof items !== 'undefined') {\n      const { appId, apiKey } = items[0].__autocomplete_algoliaCredentials;\n      const headers = {\n        'X-Algolia-Application-Id': appId,\n        'X-Algolia-API-Key': apiKey,\n      };\n\n      searchInsights(method, ...payloads, { headers });\n    } else {\n      searchInsights(method, ...payloads);\n    }\n  }\n\n  return {\n    /**\n     * Initializes Insights with Algolia credentials.\n     */\n    init(appId: string, apiKey: string) {\n      searchInsights('init', { appId, apiKey });\n    },\n    /**\n     * Sets the user token to attach to events.\n     */\n    setUserToken(userToken: string) {\n      searchInsights('setUserToken', userToken);\n    },\n    /**\n     * Sends click events to capture a query and its clicked items and positions.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids-after-search/\n     */\n    clickedObjectIDsAfterSearch(\n      ...params: Array<\n        InsightsParamsWithItems<ClickedObjectIDsAfterSearchParams>\n      >\n    ) {\n      if (params.length > 0) {\n        sendToInsights(\n          'clickedObjectIDsAfterSearch',\n          mapToInsightsParamsApi(params),\n          params[0].items\n        );\n      }\n    },\n    /**\n     * Sends click events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids/\n     */\n    clickedObjectIDs(\n      ...params: Array<InsightsParamsWithItems<ClickedObjectIDsParams>>\n    ) {\n      if (params.length > 0) {\n        sendToInsights(\n          'clickedObjectIDs',\n          mapToInsightsParamsApi(params),\n          params[0].items\n        );\n      }\n    },\n    /**\n     * Sends click events to capture the filters a user clicks on.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-filters/\n     */\n    clickedFilters(...params: ClickedFiltersParams[]) {\n      if (params.length > 0) {\n        searchInsights('clickedFilters', ...params);\n      }\n    },\n    /**\n     * Sends conversion events to capture a query and its clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids-after-search/\n     */\n    convertedObjectIDsAfterSearch(\n      ...params: Array<\n        InsightsParamsWithItems<ConvertedObjectIDsAfterSearchParams>\n      >\n    ) {\n      if (params.length > 0) {\n        sendToInsights(\n          'convertedObjectIDsAfterSearch',\n          mapToInsightsParamsApi(params),\n          params[0].items\n        );\n      }\n    },\n    /**\n     * Sends conversion events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids/\n     */\n    convertedObjectIDs(\n      ...params: Array<InsightsParamsWithItems<ConvertedObjectIDsParams>>\n    ) {\n      if (params.length > 0) {\n        sendToInsights(\n          'convertedObjectIDs',\n          mapToInsightsParamsApi(params),\n          params[0].items\n        );\n      }\n    },\n    /**\n     * Sends conversion events to capture the filters a user uses when converting.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-filters/\n     */\n    convertedFilters(...params: ConvertedFiltersParams[]) {\n      if (params.length > 0) {\n        searchInsights('convertedFilters', ...params);\n      }\n    },\n    /**\n     * Sends view events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-object-ids/\n     */\n    viewedObjectIDs(\n      ...params: Array<InsightsParamsWithItems<ViewedObjectIDsParams>>\n    ) {\n      if (params.length > 0) {\n        params\n          .reduce<\n            Array<{\n              items?: AlgoliaInsightsHit[];\n              payload: ViewedObjectIDsParams;\n            }>\n          >(\n            (acc, { items, ...param }) => [\n              ...acc,\n              ...chunk<ViewedObjectIDsParams>({\n                ...param,\n                objectIDs:\n                  items?.map(({ objectID }) => objectID) || param.objectIDs,\n              }).map((payload) => {\n                return { items, payload };\n              }),\n            ],\n            []\n          )\n          .forEach(({ items, payload }) =>\n            sendToInsights('viewedObjectIDs', [payload], items)\n          );\n      }\n    },\n    /**\n     * Sends view events to capture the filters a user uses when viewing.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-filters/\n     */\n    viewedFilters(...params: ViewedFiltersParams[]) {\n      if (params.length > 0) {\n        searchInsights('viewedFilters', ...params);\n      }\n    },\n  };\n}\n","import {\n  AlgoliaInsightsHit,\n  InsightsParamsWithItems,\n  ViewedObjectIDsParams,\n} from './types';\n\ntype CreateViewedEventsParams = {\n  items: AlgoliaInsightsHit[];\n};\n\nexport function createViewedEvents({\n  items,\n}: CreateViewedEventsParams): Array<\n  Omit<InsightsParamsWithItems<ViewedObjectIDsParams>, 'eventName'>\n> {\n  const itemsByIndexName = items.reduce<Record<string, AlgoliaInsightsHit[]>>(\n    (acc, current) => {\n      acc[current.__autocomplete_indexName] = (\n        acc[current.__autocomplete_indexName] ?? []\n      ).concat(current);\n\n      return acc;\n    },\n    {}\n  );\n\n  return Object.keys(itemsByIndexName).map((indexName) => {\n    const items = itemsByIndexName[indexName];\n\n    return {\n      index: indexName,\n      items,\n      algoliaSource: ['autocomplete'],\n    };\n  });\n}\n","import { AlgoliaInsightsHit } from './types';\n\nexport function isAlgoliaInsightsHit(hit: any): hit is AlgoliaInsightsHit {\n  return (\n    hit.objectID && hit.__autocomplete_indexName && hit.__autocomplete_queryID\n  );\n}\n","import {\n  AutocompleteState,\n  AutocompletePlugin,\n  createRef,\n  debounce,\n  isEqual,\n  noop,\n  safelyRunOnBrowser,\n} from '@algolia/autocomplete-shared';\n\nimport { createClickedEvent } from './createClickedEvent';\nimport { createSearchInsightsApi } from './createSearchInsightsApi';\nimport { createViewedEvents } from './createViewedEvents';\nimport { isAlgoliaInsightsHit } from './isAlgoliaInsightsHit';\nimport {\n  AlgoliaInsightsHit,\n  AutocompleteInsightsApi,\n  InsightsClient,\n  OnActiveParams,\n  OnItemsChangeParams,\n  OnSelectParams,\n} from './types';\n\nconst VIEW_EVENT_DELAY = 400;\nconst ALGOLIA_INSIGHTS_VERSION = '2.6.0';\nconst ALGOLIA_INSIGHTS_SRC = `https://cdn.jsdelivr.net/npm/search-insights@${ALGOLIA_INSIGHTS_VERSION}/dist/search-insights.min.js`;\n\ntype SendViewedObjectIDsParams = {\n  onItemsChange(params: OnItemsChangeParams): void;\n  items: AlgoliaInsightsHit[];\n  insights: AutocompleteInsightsApi;\n  state: AutocompleteState<any>;\n};\n\nconst sendViewedObjectIDs = debounce<SendViewedObjectIDsParams>(\n  ({ onItemsChange, items, insights, state }) => {\n    onItemsChange({\n      insights,\n      insightsEvents: createViewedEvents({ items }).map((event) => ({\n        eventName: 'Items Viewed',\n        ...event,\n      })),\n      state,\n    });\n  },\n  VIEW_EVENT_DELAY\n);\n\nexport type CreateAlgoliaInsightsPluginParams = {\n  /**\n   * The initialized Search Insights client.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-algolia-insights/createAlgoliaInsightsPlugin/#param-insightsclient\n   */\n  insightsClient?: InsightsClient;\n  /**\n   * Hook to send an Insights event when the items change.\n   *\n   * By default, it sends a `viewedObjectIDs` event.\n   *\n   * In as-you-type experiences, items change as the user types. This hook is debounced every 400ms to reflect actual items that users notice and avoid generating too many events for items matching \"in progress\" queries.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-algolia-insights/createAlgoliaInsightsPlugin/#param-onitemschange\n   */\n  onItemsChange?(params: OnItemsChangeParams): void;\n  /**\n   * Hook to send an Insights event when an item is selected.\n   *\n   * By default, it sends a clickedObjectIDsAfterSearch event.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-algolia-insights/createAlgoliaInsightsPlugin/#param-onselect\n   */\n  onSelect?(params: OnSelectParams): void;\n  /**\n   * Hook to send an Insights event when an item is active.\n   *\n   * By default, it doesn't send any events.\n   *\n   * @link https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-plugin-algolia-insights/createAlgoliaInsightsPlugin/#param-onactive\n   */\n  onActive?(params: OnActiveParams): void;\n};\n\nexport function createAlgoliaInsightsPlugin(\n  options: CreateAlgoliaInsightsPluginParams\n): AutocompletePlugin<any, undefined> {\n  const {\n    insightsClient: providedInsightsClient,\n    onItemsChange,\n    onSelect: onSelectEvent,\n    onActive: onActiveEvent,\n  } = getOptions(options);\n  let insightsClient = providedInsightsClient as InsightsClient;\n\n  if (!providedInsightsClient) {\n    safelyRunOnBrowser(({ window }) => {\n      const pointer = window.AlgoliaAnalyticsObject || 'aa';\n\n      if (typeof pointer === 'string') {\n        insightsClient = window[pointer];\n      }\n\n      if (!insightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n\n        if (!window[pointer]) {\n          window[pointer] = (...args: any[]) => {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n\n            window[pointer].queue.push(args);\n          };\n        }\n\n        window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n\n        insightsClient = window[pointer];\n\n        loadInsights(window);\n      }\n    });\n  }\n\n  const insights = createSearchInsightsApi(insightsClient);\n  const previousItems = createRef<AlgoliaInsightsHit[]>([]);\n\n  const debouncedOnStateChange = debounce<{\n    state: AutocompleteState<any>;\n  }>(({ state }) => {\n    if (!state.isOpen) {\n      return;\n    }\n\n    const items = state.collections\n      .reduce<unknown[]>((acc, current) => {\n        return [...acc, ...current.items];\n      }, [])\n      .filter(isAlgoliaInsightsHit);\n\n    if (\n      !isEqual(\n        previousItems.current.map((x) => x.objectID),\n        items.map((x) => x.objectID)\n      )\n    ) {\n      previousItems.current = items;\n\n      if (items.length > 0) {\n        sendViewedObjectIDs({ onItemsChange, items, insights, state });\n      }\n    }\n  }, 0);\n\n  return {\n    name: 'aa.algoliaInsightsPlugin',\n    subscribe({ setContext, onSelect, onActive }) {\n      insightsClient('addAlgoliaAgent', 'insights-plugin');\n\n      setContext({\n        algoliaInsightsPlugin: {\n          __algoliaSearchParameters: {\n            clickAnalytics: true,\n          },\n          insights,\n        },\n      });\n\n      onSelect(({ item, state, event }) => {\n        if (!isAlgoliaInsightsHit(item)) {\n          return;\n        }\n\n        onSelectEvent({\n          state: state as AutocompleteState<any>,\n          event,\n          insights,\n          item,\n          insightsEvents: [\n            {\n              eventName: 'Item Selected',\n              ...createClickedEvent({ item, items: previousItems.current }),\n            },\n          ],\n        });\n      });\n\n      onActive(({ item, state, event }) => {\n        if (!isAlgoliaInsightsHit(item)) {\n          return;\n        }\n\n        onActiveEvent({\n          state: state as AutocompleteState<any>,\n          event,\n          insights,\n          item,\n          insightsEvents: [\n            {\n              eventName: 'Item Active',\n              ...createClickedEvent({ item, items: previousItems.current }),\n            },\n          ],\n        });\n      });\n    },\n    onStateChange({ state }) {\n      debouncedOnStateChange({ state: state as AutocompleteState<any> });\n    },\n    __autocomplete_pluginOptions: options,\n  };\n}\n\nfunction getOptions(options: CreateAlgoliaInsightsPluginParams) {\n  return {\n    onItemsChange({ insights, insightsEvents }: OnItemsChangeParams) {\n      insights.viewedObjectIDs(\n        ...insightsEvents.map((event) => ({\n          ...event,\n          algoliaSource: [\n            ...(event.algoliaSource || []),\n            'autocomplete-internal',\n          ],\n        }))\n      );\n    },\n    onSelect({ insights, insightsEvents }: OnSelectParams) {\n      insights.clickedObjectIDsAfterSearch(\n        ...insightsEvents.map((event) => ({\n          ...event,\n          algoliaSource: [\n            ...(event.algoliaSource || []),\n            'autocomplete-internal',\n          ],\n        }))\n      );\n    },\n    onActive: noop,\n    ...options,\n  };\n}\n\nfunction loadInsights(environment: typeof window) {\n  const errorMessage = `[Autocomplete]: Could not load search-insights.js. Please load it manually following https://alg.li/insights-autocomplete`;\n\n  try {\n    const script = environment.document.createElement('script');\n    script.async = true;\n    script.src = ALGOLIA_INSIGHTS_SRC;\n\n    script.onerror = () => {\n      // eslint-disable-next-line no-console\n      console.error(errorMessage);\n    };\n\n    document.body.appendChild(script);\n  } catch (cause) {\n    // eslint-disable-next-line no-console\n    console.error(errorMessage);\n  }\n}\n"],"names":["createRef","initialValue","current","debounce","fn","time","timerId","undefined","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","isPrimitive","obj","Object","isEqual","first","second","keys","_i","_Object$keys","key","noop","safelyRunOnBrowser","callback","window","createClickedEvent","_ref","item","items","index","__autocomplete_indexName","positions","findIndex","x","objectID","queryID","__autocomplete_queryID","algoliaSource","isModernInsightsClient","client","_split$map","version","split","map","Number","_split$map2","_slicedToArray","major","minor","v3","v2_4","v1_10","chunk","chunkSize","chunks","i","objectIDs","push","_objectSpread","slice","mapToInsightsParamsApi","params","param","_objectWithoutProperties","_excluded","_ref2","createSearchInsightsApi","searchInsights","canSendHeaders","sendToInsights","method","payloads","_items$0$__autocomple","__autocomplete_algoliaCredentials","appId","apiKey","headers","concat","_toConsumableArray","init","setUserToken","userToken","clickedObjectIDsAfterSearch","clickedObjectIDs","_len2","_key2","clickedFilters","_len3","_key3","convertedObjectIDsAfterSearch","_len4","_key4","convertedObjectIDs","_len5","_key5","convertedFilters","_len6","_key6","viewedObjectIDs","_len7","_key7","reduce","acc","_ref3","_excluded2","_ref4","payload","forEach","_ref5","viewedFilters","_len8","_key8","createViewedEvents","itemsByIndexName","_acc$current$__autoco","indexName","isAlgoliaInsightsHit","hit","VIEW_EVENT_DELAY","ALGOLIA_INSIGHTS_VERSION","ALGOLIA_INSIGHTS_SRC","sendViewedObjectIDs","onItemsChange","insights","state","insightsEvents","event","eventName","createAlgoliaInsightsPlugin","options","_getOptions","getOptions","providedInsightsClient","insightsClient","onSelectEvent","onSelect","onActiveEvent","onActive","pointer","AlgoliaAnalyticsObject","queue","loadInsights","previousItems","debouncedOnStateChange","isOpen","collections","filter","name","subscribe","setContext","algoliaInsightsPlugin","__algoliaSearchParameters","clickAnalytics","_ref6","onStateChange","_ref7","__autocomplete_pluginOptions","_ref8","_ref9","environment","errorMessage","script","document","createElement","async","src","onerror","console","error","body","appendChild","cause"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,SAASA,CAACC,YAAY,EAAE;IACtC,OAAO;EACLC,IAAAA,OAAO,EAAED,YAAAA;KACV,CAAA;EACH;;ECJO,SAASE,QAAQA,CAACC,EAAE,EAAEC,IAAI,EAAE;IACjC,IAAIC,OAAO,GAAGC,SAAS,CAAA;EACvB,EAAA,OAAO,YAAY;MACjB,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;EACvFF,MAAAA,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC,CAAA;EAC9B,KAAA;EACA,IAAA,IAAIP,OAAO,EAAE;QACXQ,YAAY,CAACR,OAAO,CAAC,CAAA;EACvB,KAAA;MACAA,OAAO,GAAGS,UAAU,CAAC,YAAY;QAC/B,OAAOX,EAAE,CAACY,KAAK,CAAC,KAAK,CAAC,EAAEL,IAAI,CAAC,CAAA;OAC9B,EAAEN,IAAI,CAAC,CAAA;KACT,CAAA;EACH;;ECbA,SAASY,WAAWA,CAACC,GAAG,EAAE;EACxB,EAAA,OAAOA,GAAG,KAAKC,MAAM,CAACD,GAAG,CAAC,CAAA;EAC5B,CAAA;EACO,SAASE,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;IACrC,IAAID,KAAK,KAAKC,MAAM,EAAE;EACpB,IAAA,OAAO,IAAI,CAAA;EACb,GAAA;EACA,EAAA,IAAIL,WAAW,CAACI,KAAK,CAAC,IAAIJ,WAAW,CAACK,MAAM,CAAC,IAAI,OAAOD,KAAK,KAAK,UAAU,IAAI,OAAOC,MAAM,KAAK,UAAU,EAAE;MAC5G,OAAOD,KAAK,KAAKC,MAAM,CAAA;EACzB,GAAA;EACA,EAAA,IAAIH,MAAM,CAACI,IAAI,CAACF,KAAK,CAAC,CAACX,MAAM,KAAKS,MAAM,CAACI,IAAI,CAACD,MAAM,CAAC,CAACZ,MAAM,EAAE;EAC5D,IAAA,OAAO,KAAK,CAAA;EACd,GAAA;IACA,KAAK,IAAIc,EAAE,GAAG,CAAC,EAAEC,YAAY,GAAGN,MAAM,CAACI,IAAI,CAACF,KAAK,CAAC,EAAEG,EAAE,GAAGC,YAAY,CAACf,MAAM,EAAEc,EAAE,EAAE,EAAE;EAClF,IAAA,IAAIE,GAAG,GAAGD,YAAY,CAACD,EAAE,CAAC,CAAA;EAC1B,IAAA,IAAI,EAAEE,GAAG,IAAIJ,MAAM,CAAC,EAAE;EACpB,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACA,IAAA,IAAI,CAACF,OAAO,CAACC,KAAK,CAACK,GAAG,CAAC,EAAEJ,MAAM,CAACI,GAAG,CAAC,CAAC,EAAE;EACrC,MAAA,OAAO,KAAK,CAAA;EACd,KAAA;EACF,GAAA;EACA,EAAA,OAAO,IAAI,CAAA;EACb;;ECvBO,IAAIC,IAAI,GAAG,SAASA,IAAIA,GAAG,EAAE;;ECApC;EACA;EACA;EACO,SAASC,kBAAkBA,CAACC,QAAQ,EAAE;EAC3C,EAAA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EACjC,IAAA,OAAOD,QAAQ,CAAC;EACdC,MAAAA,MAAM,EAAEA,MAAAA;EACV,KAAC,CAAC,CAAA;EACJ,GAAA;EACA,EAAA,OAAOvB,SAAS,CAAA;EAClB;;ECCO,SAASwB,kBAAkBA,CAAAC,IAAA,EAMD;EAAA,EAAA,IAL/BC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MACJC,KAAK,GAAAF,IAAA,CAALE,KAAK,CAAA;IAKL,OAAO;MACLC,KAAK,EAAEF,IAAI,CAACG,wBAAwB;MACpCF,KAAK,EAAE,CAACD,IAAI,CAAC;MACbI,SAAS,EAAE,CAAC,CAAC,GAAGH,KAAK,CAACI,SAAS,CAAC,UAACC,CAAC,EAAA;EAAA,MAAA,OAAKA,CAAC,CAACC,QAAQ,KAAKP,IAAI,CAACO,QAAQ,CAAA;EAAA,KAAA,CAAC,CAAC;MACrEC,OAAO,EAAER,IAAI,CAACS,sBAAsB;MACpCC,aAAa,EAAE,CAAC,cAAc,CAAA;KAC/B,CAAA;EACH;;ECvBA;EACA;EACA;EACA;EACO,SAASC,sBAAsBA,CAACC,MAAsB,EAAW;EACtE,EAAA,IAAAC,UAAA,GAAuB,CAACD,MAAM,CAACE,OAAO,IAAI,EAAE,EAAEC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAAAC,WAAA,GAAAC,cAAA,CAAAN,UAAA,EAAA,CAAA,CAAA;EAA7DO,IAAAA,KAAK,GAAAF,WAAA,CAAA,CAAA,CAAA;EAAEG,IAAAA,KAAK,GAAAH,WAAA,CAAA,CAAA,CAAA,CAAA;;EAEnB;EACA,EAAA,IAAMI,EAAE,GAAGF,KAAK,IAAI,CAAC,CAAA;IACrB,IAAMG,IAAI,GAAGH,KAAK,KAAK,CAAC,IAAIC,KAAK,IAAI,CAAC,CAAA;IACtC,IAAMG,KAAK,GAAGJ,KAAK,KAAK,CAAC,IAAIC,KAAK,IAAI,EAAE,CAAA;EAExC,EAAA,OAAOC,EAAE,IAAIC,IAAI,IAAIC,KAAK,CAAA;EAC1B;EACF;;;;ECEA,SAASC,KAAKA,CACZzB,IAAW,EAEF;EAAA,EAAA,IADT0B,SAAiB,GAAAlD,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAF,SAAA,GAAAE,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;IAEtB,IAAMmD,MAAe,GAAG,EAAE,CAAA;EAC1B,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5B,IAAI,CAAC6B,SAAS,CAACpD,MAAM,EAAEmD,CAAC,IAAIF,SAAS,EAAE;EACzDC,IAAAA,MAAM,CAACG,IAAI,CAAAC,cAAA,CAAAA,cAAA,KACN/B,IAAI,CAAA,EAAA,EAAA,EAAA;QACP6B,SAAS,EAAE7B,IAAI,CAAC6B,SAAS,CAACG,KAAK,CAACJ,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAAA;OAChD,CAAA,CAAA,CAAA;EACJ,GAAA;EACA,EAAA,OAAOC,MAAM,CAAA;EACf,CAAA;EAEA,SAASM,sBAAsBA,CAK7BC,MAA6B,EAAE;EAC/B,EAAA,OAAOA,MAAM,CAAClB,GAAG,CAAC,UAAAjB,IAAA,EAAA;EAAA,IAAA,IAAGE,KAAK,GAAAF,IAAA,CAALE,KAAK;EAAKkC,MAAAA,KAAK,GAAAC,wBAAA,CAAArC,IAAA,EAAAsC,SAAA,CAAA,CAAA;EAAA,IAAA,OAAAN,cAAA,CAAAA,cAAA,CAAA,EAAA,EAC/BI,KAAK,CAAA,EAAA,EAAA,EAAA;QACRN,SAAS,EAAE,CAAA5B,KAAK,KAALA,IAAAA,IAAAA,KAAK,KAALA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEe,GAAG,CAAC,UAAAsB,KAAA,EAAA;EAAA,QAAA,IAAG/B,QAAQ,GAAA+B,KAAA,CAAR/B,QAAQ,CAAA;EAAA,QAAA,OAAOA,QAAQ,CAAA;SAAC,CAAA,KAAI4B,KAAK,CAACN,SAAAA;EAAS,KAAA,CAAA,CAAA;EAAA,GACpE,CAAC,CAAA;EACL,CAAA;EAEO,SAASU,uBAAuBA,CAACC,cAA8B,EAAE;EACtE,EAAA,IAAMC,cAAc,GAAG9B,sBAAsB,CAAC6B,cAAc,CAAC,CAAA;EAE7D,EAAA,SAASE,cAAcA,CACrBC,MAA4B,EAC5BC,QAA4C,EAC5C3C,KAA4B,EAC5B;EACA,IAAA,IAAIwC,cAAc,IAAI,OAAOxC,KAAK,KAAK,WAAW,EAAE;EAClD,MAAA,IAAA4C,qBAAA,GAA0B5C,KAAK,CAAC,CAAC,CAAC,CAAC6C,iCAAiC;UAA5DC,KAAK,GAAAF,qBAAA,CAALE,KAAK;UAAEC,MAAM,GAAAH,qBAAA,CAANG,MAAM,CAAA;EACrB,MAAA,IAAMC,OAAO,GAAG;EACd,QAAA,0BAA0B,EAAEF,KAAK;EACjC,QAAA,mBAAmB,EAAEC,MAAAA;SACtB,CAAA;QAEDR,cAAc,CAAAzD,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC4D,MAAM,CAAA,CAAAO,MAAA,CAAAC,kBAAA,CAAKP,QAAQ,CAAE,EAAA,CAAA;EAAEK,QAAAA,OAAO,EAAPA,OAAAA;EAAQ,OAAC,CAAC,CAAA,CAAA,CAAA;EAClD,KAAC,MAAM;QACLT,cAAc,CAAAzD,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC4D,MAAM,CAAA,CAAAO,MAAA,CAAAC,kBAAA,CAAKP,QAAQ,CAAC,CAAA,CAAA,CAAA;EACrC,KAAA;EACF,GAAA;IAEA,OAAO;EACL;EACJ;EACA;EACIQ,IAAAA,IAAI,EAAAA,SAAAA,IAAAA,CAACL,KAAa,EAAEC,MAAc,EAAE;QAClCR,cAAc,CAAC,MAAM,EAAE;EAAEO,QAAAA,KAAK,EAALA,KAAK;EAAEC,QAAAA,MAAM,EAANA,MAAAA;EAAO,OAAC,CAAC,CAAA;OAC1C;EACD;EACJ;EACA;MACIK,YAAY,EAAA,SAAAA,YAACC,CAAAA,SAAiB,EAAE;EAC9Bd,MAAAA,cAAc,CAAC,cAAc,EAAEc,SAAS,CAAC,CAAA;OAC1C;EACD;EACJ;EACA;EACA;EACA;MACIC,2BAA2B,EAAA,SAAAA,8BAIzB;EAAA,MAAA,KAAA,IAAAhF,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAHGyD,MAAM,GAAAvD,IAAAA,KAAA,CAAAJ,IAAA,GAAAK,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA,EAAA;EAANsD,QAAAA,MAAM,CAAAtD,IAAA,CAAAJ,GAAAA,SAAA,CAAAI,IAAA,CAAA,CAAA;EAAA,OAAA;EAIT,MAAA,IAAIsD,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;EACrBiE,QAAAA,cAAc,CACZ,6BAA6B,EAC7BT,sBAAsB,CAACC,MAAM,CAAC,EAC9BA,MAAM,CAAC,CAAC,CAAC,CAACjC,KAAK,CAChB,CAAA;EACH,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACIuD,gBAAgB,EAAA,SAAAA,mBAEd;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAAjF,SAAA,CAAAC,MAAA,EADGyD,MAAM,GAAAvD,IAAAA,KAAA,CAAA8E,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAANxB,QAAAA,MAAM,CAAAwB,KAAA,CAAAlF,GAAAA,SAAA,CAAAkF,KAAA,CAAA,CAAA;EAAA,OAAA;EAET,MAAA,IAAIxB,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;EACrBiE,QAAAA,cAAc,CACZ,kBAAkB,EAClBT,sBAAsB,CAACC,MAAM,CAAC,EAC9BA,MAAM,CAAC,CAAC,CAAC,CAACjC,KAAK,CAChB,CAAA;EACH,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACI0D,cAAc,EAAA,SAAAA,iBAAoC;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAApF,SAAA,CAAAC,MAAA,EAAhCyD,MAAM,GAAAvD,IAAAA,KAAA,CAAAiF,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAAN3B,QAAAA,MAAM,CAAA2B,KAAA,CAAArF,GAAAA,SAAA,CAAAqF,KAAA,CAAA,CAAA;EAAA,OAAA;EACtB,MAAA,IAAI3B,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;UACrB+D,cAAc,CAAAzD,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,gBAAgB,EAAAmE,MAAA,CAAKhB,MAAM,CAAC,CAAA,CAAA;EAC7C,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACI4B,6BAA6B,EAAA,SAAAA,gCAI3B;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAAvF,SAAA,CAAAC,MAAA,EAHGyD,MAAM,GAAAvD,IAAAA,KAAA,CAAAoF,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAAN9B,QAAAA,MAAM,CAAA8B,KAAA,CAAAxF,GAAAA,SAAA,CAAAwF,KAAA,CAAA,CAAA;EAAA,OAAA;EAIT,MAAA,IAAI9B,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;EACrBiE,QAAAA,cAAc,CACZ,+BAA+B,EAC/BT,sBAAsB,CAACC,MAAM,CAAC,EAC9BA,MAAM,CAAC,CAAC,CAAC,CAACjC,KAAK,CAChB,CAAA;EACH,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACIgE,kBAAkB,EAAA,SAAAA,qBAEhB;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAA1F,SAAA,CAAAC,MAAA,EADGyD,MAAM,GAAAvD,IAAAA,KAAA,CAAAuF,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAANjC,QAAAA,MAAM,CAAAiC,KAAA,CAAA3F,GAAAA,SAAA,CAAA2F,KAAA,CAAA,CAAA;EAAA,OAAA;EAET,MAAA,IAAIjC,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;EACrBiE,QAAAA,cAAc,CACZ,oBAAoB,EACpBT,sBAAsB,CAACC,MAAM,CAAC,EAC9BA,MAAM,CAAC,CAAC,CAAC,CAACjC,KAAK,CAChB,CAAA;EACH,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACImE,gBAAgB,EAAA,SAAAA,mBAAsC;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAA7F,SAAA,CAAAC,MAAA,EAAlCyD,MAAM,GAAAvD,IAAAA,KAAA,CAAA0F,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAANpC,QAAAA,MAAM,CAAAoC,KAAA,CAAA9F,GAAAA,SAAA,CAAA8F,KAAA,CAAA,CAAA;EAAA,OAAA;EACxB,MAAA,IAAIpC,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;UACrB+D,cAAc,CAAAzD,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,kBAAkB,EAAAmE,MAAA,CAAKhB,MAAM,CAAC,CAAA,CAAA;EAC/C,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACIqC,eAAe,EAAA,SAAAA,kBAEb;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAAhG,SAAA,CAAAC,MAAA,EADGyD,MAAM,GAAAvD,IAAAA,KAAA,CAAA6F,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAANvC,QAAAA,MAAM,CAAAuC,KAAA,CAAAjG,GAAAA,SAAA,CAAAiG,KAAA,CAAA,CAAA;EAAA,OAAA;EAET,MAAA,IAAIvC,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;EACrByD,QAAAA,MAAM,CACHwC,MAAM,CAML,UAACC,GAAG,EAAAC,KAAA,EAAA;EAAA,UAAA,IAAI3E,KAAK,GAAA2E,KAAA,CAAL3E,KAAK;EAAKkC,YAAAA,KAAK,GAAAC,wBAAA,CAAAwC,KAAA,EAAAC,UAAA,CAAA,CAAA;EAAA,UAAA,OAAA,EAAA,CAAA3B,MAAA,CAAAC,kBAAA,CAClBwB,GAAG,CAAAxB,EAAAA,kBAAA,CACH1B,KAAK,CAAAM,cAAA,CAAAA,cAAA,KACHI,KAAK,CAAA,EAAA,EAAA,EAAA;cACRN,SAAS,EACP,CAAA5B,KAAK,KAALA,IAAAA,IAAAA,KAAK,KAALA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEe,GAAG,CAAC,UAAA8D,KAAA,EAAA;EAAA,cAAA,IAAGvE,QAAQ,GAAAuE,KAAA,CAARvE,QAAQ,CAAA;EAAA,cAAA,OAAOA,QAAQ,CAAA;eAAC,CAAA,KAAI4B,KAAK,CAACN,SAAAA;EAAS,WAAA,CAAA,CAC3D,CAACb,GAAG,CAAC,UAAC+D,OAAO,EAAK;cAClB,OAAO;EAAE9E,cAAAA,KAAK,EAALA,KAAK;EAAE8E,cAAAA,OAAO,EAAPA,OAAAA;eAAS,CAAA;EAC3B,WAAC,CAAC,CAAA,CAAA,CAAA;EAAA,SACH,EACD,EAAE,CACH,CACAC,OAAO,CAAC,UAAAC,KAAA,EAAA;EAAA,UAAA,IAAGhF,KAAK,GAAAgF,KAAA,CAALhF,KAAK;cAAE8E,OAAO,GAAAE,KAAA,CAAPF,OAAO,CAAA;YAAA,OACxBrC,cAAc,CAAC,iBAAiB,EAAE,CAACqC,OAAO,CAAC,EAAE9E,KAAK,CAAC,CAAA;WACpD,CAAA,CAAA;EACL,OAAA;OACD;EACD;EACJ;EACA;EACA;EACA;MACIiF,aAAa,EAAA,SAAAA,gBAAmC;EAAA,MAAA,KAAA,IAAAC,KAAA,GAAA3G,SAAA,CAAAC,MAAA,EAA/ByD,MAAM,GAAAvD,IAAAA,KAAA,CAAAwG,KAAA,GAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;EAANlD,QAAAA,MAAM,CAAAkD,KAAA,CAAA5G,GAAAA,SAAA,CAAA4G,KAAA,CAAA,CAAA;EAAA,OAAA;EACrB,MAAA,IAAIlD,MAAM,CAACzD,MAAM,GAAG,CAAC,EAAE;UACrB+D,cAAc,CAAAzD,KAAA,CAAC,KAAA,CAAA,EAAA,CAAA,eAAe,EAAAmE,MAAA,CAAKhB,MAAM,CAAC,CAAA,CAAA;EAC5C,OAAA;EACF,KAAA;KACD,CAAA;EACH;;ECxMO,SAASmD,kBAAkBA,CAAAtF,IAAA,EAIhC;EAAA,EAAA,IAHAE,KAAK,GAAAF,IAAA,CAALE,KAAK,CAAA;IAIL,IAAMqF,gBAAgB,GAAGrF,KAAK,CAACyE,MAAM,CACnC,UAACC,GAAG,EAAE1G,OAAO,EAAK;EAAA,IAAA,IAAAsH,qBAAA,CAAA;MAChBZ,GAAG,CAAC1G,OAAO,CAACkC,wBAAwB,CAAC,GAAG,CAAAoF,CAAAA,qBAAA,GACtCZ,GAAG,CAAC1G,OAAO,CAACkC,wBAAwB,CAAC,MAAAoF,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,EAC3CrC,MAAM,CAACjF,OAAO,CAAC,CAAA;EAEjB,IAAA,OAAO0G,GAAG,CAAA;KACX,EACD,EAAE,CACH,CAAA;IAED,OAAOzF,MAAM,CAACI,IAAI,CAACgG,gBAAgB,CAAC,CAACtE,GAAG,CAAC,UAACwE,SAAS,EAAK;EACtD,IAAA,IAAMvF,KAAK,GAAGqF,gBAAgB,CAACE,SAAS,CAAC,CAAA;MAEzC,OAAO;EACLtF,MAAAA,KAAK,EAAEsF,SAAS;EAChBvF,MAAAA,KAAK,EAALA,KAAK;QACLS,aAAa,EAAE,CAAC,cAAc,CAAA;OAC/B,CAAA;EACH,GAAC,CAAC,CAAA;EACJ;;ECjCO,SAAS+E,oBAAoBA,CAACC,GAAQ,EAA6B;IACxE,OACEA,GAAG,CAACnF,QAAQ,IAAImF,GAAG,CAACvF,wBAAwB,IAAIuF,GAAG,CAACjF,sBAAsB,CAAA;EAE9E;;ECiBA,IAAMkF,gBAAgB,GAAG,GAAG,CAAA;EAC5B,IAAMC,wBAAwB,GAAG,OAAO,CAAA;EACxC,IAAMC,oBAAoB,GAAA,+CAAA,CAAA3C,MAAA,CAAmD0C,wBAAwB,EAA8B,8BAAA,CAAA,CAAA;EASnI,IAAME,mBAAmB,GAAG5H,QAAQ,CAClC,UAAA6B,IAAA,EAA+C;EAAA,EAAA,IAA5CgG,aAAa,GAAAhG,IAAA,CAAbgG,aAAa;MAAE9F,KAAK,GAAAF,IAAA,CAALE,KAAK;MAAE+F,QAAQ,GAAAjG,IAAA,CAARiG,QAAQ;MAAEC,KAAK,GAAAlG,IAAA,CAALkG,KAAK,CAAA;EACtCF,EAAAA,aAAa,CAAC;EACZC,IAAAA,QAAQ,EAARA,QAAQ;MACRE,cAAc,EAAEb,kBAAkB,CAAC;EAAEpF,MAAAA,KAAK,EAALA,KAAAA;EAAM,KAAC,CAAC,CAACe,GAAG,CAAC,UAACmF,KAAK,EAAA;EAAA,MAAA,OAAApE,cAAA,CAAA;EACtDqE,QAAAA,SAAS,EAAE,cAAA;EAAc,OAAA,EACtBD,KAAK,CAAA,CAAA;EAAA,KACR,CAAC;EACHF,IAAAA,KAAK,EAALA,KAAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAC,EACDN,gBAAgB,CACjB,CAAA;EAqCM,SAASU,2BAA2BA,CACzCC,OAA0C,EACN;EACpC,EAAA,IAAAC,WAAA,GAKIC,UAAU,CAACF,OAAO,CAAC;MAJLG,sBAAsB,GAAAF,WAAA,CAAtCG,cAAc;MACdX,aAAa,GAAAQ,WAAA,CAAbR,aAAa;MACHY,aAAa,GAAAJ,WAAA,CAAvBK,QAAQ;MACEC,aAAa,GAAAN,WAAA,CAAvBO,QAAQ,CAAA;IAEV,IAAIJ,cAAc,GAAGD,sBAAwC,CAAA;IAE7D,IAAI,CAACA,sBAAsB,EAAE;MAC3B9G,kBAAkB,CAAC,UAAA2C,KAAA,EAAgB;EAAA,MAAA,IAAbzC,MAAM,GAAAyC,KAAA,CAANzC,MAAM,CAAA;EAC1B,MAAA,IAAMkH,OAAO,GAAGlH,MAAM,CAACmH,sBAAsB,IAAI,IAAI,CAAA;EAErD,MAAA,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;EAC/BL,QAAAA,cAAc,GAAG7G,MAAM,CAACkH,OAAO,CAAC,CAAA;EAClC,OAAA;QAEA,IAAI,CAACL,cAAc,EAAE;UACnB7G,MAAM,CAACmH,sBAAsB,GAAGD,OAAO,CAAA;EAEvC,QAAA,IAAI,CAAClH,MAAM,CAACkH,OAAO,CAAC,EAAE;EACpBlH,UAAAA,MAAM,CAACkH,OAAO,CAAC,GAAG,YAAoB;EACpC,YAAA,IAAI,CAAClH,MAAM,CAACkH,OAAO,CAAC,CAACE,KAAK,EAAE;EAC1BpH,cAAAA,MAAM,CAACkH,OAAO,CAAC,CAACE,KAAK,GAAG,EAAE,CAAA;EAC5B,aAAA;EAAC,YAAA,KAAA,IAAA1I,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAHmBC,IAAI,GAAAC,IAAAA,KAAA,CAAAJ,IAAA,GAAAK,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA,EAAA;EAAJF,cAAAA,IAAI,CAAAE,IAAA,CAAAJ,GAAAA,SAAA,CAAAI,IAAA,CAAA,CAAA;EAAA,aAAA;cAKxBiB,MAAM,CAACkH,OAAO,CAAC,CAACE,KAAK,CAACnF,IAAI,CAACpD,IAAI,CAAC,CAAA;aACjC,CAAA;EACH,SAAA;EAEAmB,QAAAA,MAAM,CAACkH,OAAO,CAAC,CAACjG,OAAO,GAAG8E,wBAAwB,CAAA;EAElDc,QAAAA,cAAc,GAAG7G,MAAM,CAACkH,OAAO,CAAC,CAAA;UAEhCG,YAAY,CAACrH,MAAM,CAAC,CAAA;EACtB,OAAA;EACF,KAAC,CAAC,CAAA;EACJ,GAAA;EAEA,EAAA,IAAMmG,QAAQ,GAAGzD,uBAAuB,CAACmE,cAAc,CAAC,CAAA;EACxD,EAAA,IAAMS,aAAa,GAAGpJ,SAAS,CAAuB,EAAE,CAAC,CAAA;EAEzD,EAAA,IAAMqJ,sBAAsB,GAAGlJ,QAAQ,CAEpC,UAAA0G,KAAA,EAAe;EAAA,IAAA,IAAZqB,KAAK,GAAArB,KAAA,CAALqB,KAAK,CAAA;EACT,IAAA,IAAI,CAACA,KAAK,CAACoB,MAAM,EAAE;EACjB,MAAA,OAAA;EACF,KAAA;EAEA,IAAA,IAAMpH,KAAK,GAAGgG,KAAK,CAACqB,WAAW,CAC5B5C,MAAM,CAAY,UAACC,GAAG,EAAE1G,OAAO,EAAK;QACnC,OAAAiF,EAAAA,CAAAA,MAAA,CAAAC,kBAAA,CAAWwB,GAAG,GAAAxB,kBAAA,CAAKlF,OAAO,CAACgC,KAAK,CAAA,CAAA,CAAA;EAClC,KAAC,EAAE,EAAE,CAAC,CACLsH,MAAM,CAAC9B,oBAAoB,CAAC,CAAA;MAE/B,IACE,CAACtG,OAAO,CACNgI,aAAa,CAAClJ,OAAO,CAAC+C,GAAG,CAAC,UAACV,CAAC,EAAA;QAAA,OAAKA,CAAC,CAACC,QAAQ,CAAA;EAAA,KAAA,CAAC,EAC5CN,KAAK,CAACe,GAAG,CAAC,UAACV,CAAC,EAAA;QAAA,OAAKA,CAAC,CAACC,QAAQ,CAAA;EAAA,KAAA,CAAC,CAC7B,EACD;QACA4G,aAAa,CAAClJ,OAAO,GAAGgC,KAAK,CAAA;EAE7B,MAAA,IAAIA,KAAK,CAACxB,MAAM,GAAG,CAAC,EAAE;EACpBqH,QAAAA,mBAAmB,CAAC;EAAEC,UAAAA,aAAa,EAAbA,aAAa;EAAE9F,UAAAA,KAAK,EAALA,KAAK;EAAE+F,UAAAA,QAAQ,EAARA,QAAQ;EAAEC,UAAAA,KAAK,EAALA,KAAAA;EAAM,SAAC,CAAC,CAAA;EAChE,OAAA;EACF,KAAA;KACD,EAAE,CAAC,CAAC,CAAA;IAEL,OAAO;EACLuB,IAAAA,IAAI,EAAE,0BAA0B;MAChCC,SAAS,EAAA,SAAAA,SAAA3C,CAAAA,KAAA,EAAqC;EAAA,MAAA,IAAlC4C,UAAU,GAAA5C,KAAA,CAAV4C,UAAU;UAAEd,QAAQ,GAAA9B,KAAA,CAAR8B,QAAQ;UAAEE,QAAQ,GAAAhC,KAAA,CAARgC,QAAQ,CAAA;EACxCJ,MAAAA,cAAc,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAA;EAEpDgB,MAAAA,UAAU,CAAC;EACTC,QAAAA,qBAAqB,EAAE;EACrBC,UAAAA,yBAAyB,EAAE;EACzBC,YAAAA,cAAc,EAAE,IAAA;aACjB;EACD7B,UAAAA,QAAQ,EAARA,QAAAA;EACF,SAAA;EACF,OAAC,CAAC,CAAA;QAEFY,QAAQ,CAAC,UAAA3B,KAAA,EAA4B;EAAA,QAAA,IAAzBjF,IAAI,GAAAiF,KAAA,CAAJjF,IAAI;YAAEiG,KAAK,GAAAhB,KAAA,CAALgB,KAAK;YAAEE,KAAK,GAAAlB,KAAA,CAALkB,KAAK,CAAA;EAC5B,QAAA,IAAI,CAACV,oBAAoB,CAACzF,IAAI,CAAC,EAAE;EAC/B,UAAA,OAAA;EACF,SAAA;EAEA2G,QAAAA,aAAa,CAAC;EACZV,UAAAA,KAAK,EAAEA,KAA+B;EACtCE,UAAAA,KAAK,EAALA,KAAK;EACLH,UAAAA,QAAQ,EAARA,QAAQ;EACRhG,UAAAA,IAAI,EAAJA,IAAI;YACJkG,cAAc,EAAE,CAAAnE,cAAA,CAAA;EAEZqE,YAAAA,SAAS,EAAE,eAAA;EAAe,WAAA,EACvBtG,kBAAkB,CAAC;EAAEE,YAAAA,IAAI,EAAJA,IAAI;cAAEC,KAAK,EAAEkH,aAAa,CAAClJ,OAAAA;EAAQ,WAAC,CAAC,CAAA,CAAA;EAGnE,SAAC,CAAC,CAAA;EACJ,OAAC,CAAC,CAAA;QAEF6I,QAAQ,CAAC,UAAAgB,KAAA,EAA4B;EAAA,QAAA,IAAzB9H,IAAI,GAAA8H,KAAA,CAAJ9H,IAAI;YAAEiG,KAAK,GAAA6B,KAAA,CAAL7B,KAAK;YAAEE,KAAK,GAAA2B,KAAA,CAAL3B,KAAK,CAAA;EAC5B,QAAA,IAAI,CAACV,oBAAoB,CAACzF,IAAI,CAAC,EAAE;EAC/B,UAAA,OAAA;EACF,SAAA;EAEA6G,QAAAA,aAAa,CAAC;EACZZ,UAAAA,KAAK,EAAEA,KAA+B;EACtCE,UAAAA,KAAK,EAALA,KAAK;EACLH,UAAAA,QAAQ,EAARA,QAAQ;EACRhG,UAAAA,IAAI,EAAJA,IAAI;YACJkG,cAAc,EAAE,CAAAnE,cAAA,CAAA;EAEZqE,YAAAA,SAAS,EAAE,aAAA;EAAa,WAAA,EACrBtG,kBAAkB,CAAC;EAAEE,YAAAA,IAAI,EAAJA,IAAI;cAAEC,KAAK,EAAEkH,aAAa,CAAClJ,OAAAA;EAAQ,WAAC,CAAC,CAAA,CAAA;EAGnE,SAAC,CAAC,CAAA;EACJ,OAAC,CAAC,CAAA;OACH;MACD8J,aAAa,EAAA,SAAAA,aAAAC,CAAAA,KAAA,EAAY;EAAA,MAAA,IAAT/B,KAAK,GAAA+B,KAAA,CAAL/B,KAAK,CAAA;EACnBmB,MAAAA,sBAAsB,CAAC;EAAEnB,QAAAA,KAAK,EAAEA,KAAAA;EAAgC,OAAC,CAAC,CAAA;OACnE;EACDgC,IAAAA,4BAA4B,EAAE3B,OAAAA;KAC/B,CAAA;EACH,CAAA;EAEA,SAASE,UAAUA,CAACF,OAA0C,EAAE;EAC9D,EAAA,OAAAvE,cAAA,CAAA;MACEgE,aAAa,EAAA,SAAAA,aAAAmC,CAAAA,KAAA,EAAoD;EAAA,MAAA,IAAjDlC,QAAQ,GAAAkC,KAAA,CAARlC,QAAQ;UAAEE,cAAc,GAAAgC,KAAA,CAAdhC,cAAc,CAAA;EACtCF,MAAAA,QAAQ,CAACzB,eAAe,CAAAxF,KAAA,CAAxBiH,QAAQ,EAAA7C,kBAAA,CACH+C,cAAc,CAAClF,GAAG,CAAC,UAACmF,KAAK,EAAA;EAAA,QAAA,OAAApE,cAAA,CAAAA,cAAA,CAAA,EAAA,EACvBoE,KAAK,CAAA,EAAA,EAAA,EAAA;YACRzF,aAAa,EAAA,EAAA,CAAAwC,MAAA,CAAAC,kBAAA,CACPgD,KAAK,CAACzF,aAAa,IAAI,EAAE,CAAA,EAAA,CAC7B,uBAAuB,CAAA,CAAA;EACxB,SAAA,CAAA,CAAA;EAAA,OACD,CAAC,CACJ,CAAA,CAAA;OACF;MACDkG,QAAQ,EAAA,SAAAA,QAAAuB,CAAAA,KAAA,EAA+C;EAAA,MAAA,IAA5CnC,QAAQ,GAAAmC,KAAA,CAARnC,QAAQ;UAAEE,cAAc,GAAAiC,KAAA,CAAdjC,cAAc,CAAA;EACjCF,MAAAA,QAAQ,CAACzC,2BAA2B,CAAAxE,KAAA,CAApCiH,QAAQ,EAAA7C,kBAAA,CACH+C,cAAc,CAAClF,GAAG,CAAC,UAACmF,KAAK,EAAA;EAAA,QAAA,OAAApE,cAAA,CAAAA,cAAA,CAAA,EAAA,EACvBoE,KAAK,CAAA,EAAA,EAAA,EAAA;YACRzF,aAAa,EAAA,EAAA,CAAAwC,MAAA,CAAAC,kBAAA,CACPgD,KAAK,CAACzF,aAAa,IAAI,EAAE,CAAA,EAAA,CAC7B,uBAAuB,CAAA,CAAA;EACxB,SAAA,CAAA,CAAA;EAAA,OACD,CAAC,CACJ,CAAA,CAAA;OACF;EACDoG,IAAAA,QAAQ,EAAEpH,IAAAA;EAAI,GAAA,EACX4G,OAAO,CAAA,CAAA;EAEd,CAAA;EAEA,SAASY,YAAYA,CAACkB,WAA0B,EAAE;EAChD,EAAA,IAAMC,YAAY,GAA8H,2HAAA,CAAA;IAEhJ,IAAI;MACF,IAAMC,MAAM,GAAGF,WAAW,CAACG,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAA;MAC3DF,MAAM,CAACG,KAAK,GAAG,IAAI,CAAA;MACnBH,MAAM,CAACI,GAAG,GAAG7C,oBAAoB,CAAA;MAEjCyC,MAAM,CAACK,OAAO,GAAG,YAAM;EACrB;EACAC,MAAAA,OAAO,CAACC,KAAK,CAACR,YAAY,CAAC,CAAA;OAC5B,CAAA;EAEDE,IAAAA,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC,CAAA;KAClC,CAAC,OAAOU,KAAK,EAAE;EACd;EACAJ,IAAAA,OAAO,CAACC,KAAK,CAACR,YAAY,CAAC,CAAA;EAC7B,GAAA;EACF;;;;;;;;;;"}